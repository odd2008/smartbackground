<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zuo.smartbackground.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.zuo.smartbackground.model.Book">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="schedule_id" jdbcType="INTEGER" property="scheduleId" />
    <result column="patient_id" jdbcType="INTEGER" property="patientId" />
    <result column="book_time" jdbcType="TIMESTAMP" property="bookTime" />
    <result column="is_avaliablity" jdbcType="BIT" property="isAvaliablity" />
    <result column="is_cancle" jdbcType="BIT" property="isCancle" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    book_id, schedule_id, patient_id, book_time, is_avaliablity, is_cancle
  </sql>
  <select id="selectByExample" parameterType="com.zuo.smartbackground.model.BookExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zuo.smartbackground.model.BookExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zuo.smartbackground.model.Book">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into book (book_id, schedule_id, patient_id, 
      book_time, is_avaliablity, is_cancle
      )
    values (#{bookId,jdbcType=INTEGER}, #{scheduleId,jdbcType=INTEGER}, #{patientId,jdbcType=INTEGER}, 
      #{bookTime,jdbcType=TIMESTAMP}, #{isAvaliablity,jdbcType=BIT}, #{isCancle,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zuo.smartbackground.model.Book">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="bookTime != null">
        book_time,
      </if>
      <if test="isAvaliablity != null">
        is_avaliablity,
      </if>
      <if test="isCancle != null">
        is_cancle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="patientId != null">
        #{patientId,jdbcType=INTEGER},
      </if>
      <if test="bookTime != null">
        #{bookTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isAvaliablity != null">
        #{isAvaliablity,jdbcType=BIT},
      </if>
      <if test="isCancle != null">
        #{isCancle,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zuo.smartbackground.model.BookExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.patientId != null">
        patient_id = #{record.patientId,jdbcType=INTEGER},
      </if>
      <if test="record.bookTime != null">
        book_time = #{record.bookTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isAvaliablity != null">
        is_avaliablity = #{record.isAvaliablity,jdbcType=BIT},
      </if>
      <if test="record.isCancle != null">
        is_cancle = #{record.isCancle,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    set book_id = #{record.bookId,jdbcType=INTEGER},
      schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      patient_id = #{record.patientId,jdbcType=INTEGER},
      book_time = #{record.bookTime,jdbcType=TIMESTAMP},
      is_avaliablity = #{record.isAvaliablity,jdbcType=BIT},
      is_cancle = #{record.isCancle,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zuo.smartbackground.model.Book">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    <set>
      <if test="scheduleId != null">
        schedule_id = #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="patientId != null">
        patient_id = #{patientId,jdbcType=INTEGER},
      </if>
      <if test="bookTime != null">
        book_time = #{bookTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isAvaliablity != null">
        is_avaliablity = #{isAvaliablity,jdbcType=BIT},
      </if>
      <if test="isCancle != null">
        is_cancle = #{isCancle,jdbcType=BIT},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zuo.smartbackground.model.Book">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update book
    set schedule_id = #{scheduleId,jdbcType=INTEGER},
      patient_id = #{patientId,jdbcType=INTEGER},
      book_time = #{bookTime,jdbcType=TIMESTAMP},
      is_avaliablity = #{isAvaliablity,jdbcType=BIT},
      is_cancle = #{isCancle,jdbcType=BIT}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>