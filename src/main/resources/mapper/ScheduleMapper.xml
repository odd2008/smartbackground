<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zuo.smartbackground.dao.ScheduleMapper">
  <resultMap id="BaseResultMap" type="com.zuo.smartbackground.model.Schedule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="schedule_id" jdbcType="INTEGER" property="scheduleId" />
    <result column="doctor_id" jdbcType="INTEGER" property="doctorId" />
    <result column="w" jdbcType="INTEGER" property="w" />
    <result column="remainder" jdbcType="INTEGER" property="remainder" />
    <result column="work_time_start" jdbcType="DATE" property="workTimeStart" />
    <result column="is_cancle" jdbcType="BIT" property="isCancle" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    schedule_id, doctor_id, w, remainder, work_time_start, is_cancle
  </sql>
  <select id="selectByExample" parameterType="com.zuo.smartbackground.model.ScheduleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from schedule
    where schedule_id = #{scheduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from schedule
    where schedule_id = #{scheduleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zuo.smartbackground.model.ScheduleExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zuo.smartbackground.model.Schedule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into schedule (schedule_id, doctor_id, w, 
      remainder, work_time_start, is_cancle
      )
    values (#{scheduleId,jdbcType=INTEGER}, #{doctorId,jdbcType=INTEGER}, #{w,jdbcType=INTEGER}, 
      #{remainder,jdbcType=INTEGER}, #{workTimeStart,jdbcType=DATE}, #{isCancle,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zuo.smartbackground.model.Schedule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="w != null">
        w,
      </if>
      <if test="remainder != null">
        remainder,
      </if>
      <if test="workTimeStart != null">
        work_time_start,
      </if>
      <if test="isCancle != null">
        is_cancle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="w != null">
        #{w,jdbcType=INTEGER},
      </if>
      <if test="remainder != null">
        #{remainder,jdbcType=INTEGER},
      </if>
      <if test="workTimeStart != null">
        #{workTimeStart,jdbcType=DATE},
      </if>
      <if test="isCancle != null">
        #{isCancle,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zuo.smartbackground.model.ScheduleExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update schedule
    <set>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.w != null">
        w = #{record.w,jdbcType=INTEGER},
      </if>
      <if test="record.remainder != null">
        remainder = #{record.remainder,jdbcType=INTEGER},
      </if>
      <if test="record.workTimeStart != null">
        work_time_start = #{record.workTimeStart,jdbcType=DATE},
      </if>
      <if test="record.isCancle != null">
        is_cancle = #{record.isCancle,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update schedule
    set schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      doctor_id = #{record.doctorId,jdbcType=INTEGER},
      w = #{record.w,jdbcType=INTEGER},
      remainder = #{record.remainder,jdbcType=INTEGER},
      work_time_start = #{record.workTimeStart,jdbcType=DATE},
      is_cancle = #{record.isCancle,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zuo.smartbackground.model.Schedule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update schedule
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="w != null">
        w = #{w,jdbcType=INTEGER},
      </if>
      <if test="remainder != null">
        remainder = #{remainder,jdbcType=INTEGER},
      </if>
      <if test="workTimeStart != null">
        work_time_start = #{workTimeStart,jdbcType=DATE},
      </if>
      <if test="isCancle != null">
        is_cancle = #{isCancle,jdbcType=BIT},
      </if>
    </set>
    where schedule_id = #{scheduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zuo.smartbackground.model.Schedule">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update schedule
    set doctor_id = #{doctorId,jdbcType=INTEGER},
      w = #{w,jdbcType=INTEGER},
      remainder = #{remainder,jdbcType=INTEGER},
      work_time_start = #{workTimeStart,jdbcType=DATE},
      is_cancle = #{isCancle,jdbcType=BIT}
    where schedule_id = #{scheduleId,jdbcType=INTEGER}
  </update>
  <!--<update id="updateRemainder" parameterType="map" >-->
    <!--update schedule s-->
    <!--set s.remainder = s.remainder+1-->
    <!--where schedule_id = #{scheduleId,jdbcType=INTEGER}-->
  <!--</update>-->
  <!--<update id="updateUnRemainder" parameterType="map" >-->
    <!--update schedule s-->
    <!--set s.remainder = s.remainder-1-->
    <!--where schedule_id = #{scheduleId,jdbcType=INTEGER}-->
  <!--</update>-->
</mapper>